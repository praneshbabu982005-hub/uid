{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prane\\\\Desktop\\\\depart\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const sampleUsers = [{\n      id: 1,\n      name: 'Admin User',\n      email: 'praneshbabutj.23it@kongu.edu',\n      password: '123456',\n      role: 'admin'\n    }, {\n      id: 2,\n      name: 'John Doe',\n      email: 'john@example.com',\n      password: 'password123',\n      role: 'user'\n    }];\n    setUsers(sampleUsers);\n    const savedUser = localStorage.getItem('currentUser');\n    const token = localStorage.getItem('token');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    if (token) {\n      // try to refresh from backend\n      api.get('/me').then(({\n        data\n      }) => {\n        setCurrentUser(data);\n        localStorage.setItem('currentUser', JSON.stringify(data));\n      }).catch(() => {});\n    }\n    setLoading(false);\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/login', {\n        email,\n        password\n      });\n      setCurrentUser(data.user);\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\n      localStorage.setItem('token', data.token);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (e) {\n      const user = users.find(u => u.email === email && u.password === password);\n      if (user) {\n        setCurrentUser(user);\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        return {\n          success: true,\n          user\n        };\n      }\n      return {\n        success: false,\n        error: 'Invalid email or password'\n      };\n    }\n  };\n  const signup = async (name, email, password) => {\n    try {\n      const {\n        data\n      } = await api.post('/auth/signup', {\n        name,\n        email,\n        password\n      });\n      setCurrentUser(data.user);\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\n      localStorage.setItem('token', data.token);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (e) {\n      const existingUser = users.find(u => u.email === email);\n      if (existingUser) {\n        return {\n          success: false,\n          error: 'User already exists'\n        };\n      }\n      const newUser = {\n        id: users.length + 1,\n        name,\n        email,\n        password,\n        role: 'user'\n      };\n      setUsers([...users, newUser]);\n      setCurrentUser(newUser);\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\n      return {\n        success: true,\n        user: newUser\n      };\n    }\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n    localStorage.removeItem('token');\n  };\n  const fetchAllUsers = async () => {\n    try {\n      const {\n        data\n      } = await api.get('/users');\n      return data;\n    } catch (e) {\n      return users;\n    }\n  };\n  const updateProfile = async updates => {\n    try {\n      const {\n        data\n      } = await api.put('/me', updates);\n      setCurrentUser(data.user);\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\n      localStorage.setItem('token', data.token);\n      return {\n        success: true,\n        user: data.user\n      };\n    } catch (e) {\n      // fallback: update local-only session\n      const updated = {\n        ...currentUser,\n        ...updates\n      };\n      setCurrentUser(updated);\n      localStorage.setItem('currentUser', JSON.stringify(updated));\n      return {\n        success: true,\n        user: updated\n      };\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    getAllUsers: fetchAllUsers,\n    updateProfile,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"iTQSDCOdPKz7Cd1LiGHVWwr+VeI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","users","setUsers","loading","setLoading","sampleUsers","id","name","email","password","role","savedUser","localStorage","getItem","token","JSON","parse","get","then","data","setItem","stringify","catch","login","post","user","success","e","find","u","error","signup","existingUser","newUser","length","logout","removeItem","fetchAllUsers","updateProfile","updates","put","updated","value","getAllUsers","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prane/Desktop/depart/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../api/client';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const sampleUsers = [\r\n      {\r\n        id: 1,\r\n        name: 'Admin User',\r\n        email: 'praneshbabutj.23it@kongu.edu',\r\n        password: '123456',\r\n        role: 'admin'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        password: 'password123',\r\n        role: 'user'\r\n      }\r\n    ];\r\n    setUsers(sampleUsers);\r\n    \r\n    const savedUser = localStorage.getItem('currentUser');\r\n    const token = localStorage.getItem('token');\r\n    if (savedUser) {\r\n      setCurrentUser(JSON.parse(savedUser));\r\n    }\r\n    if (token) {\r\n      // try to refresh from backend\r\n      api.get('/me').then(({ data }) => {\r\n        setCurrentUser(data);\r\n        localStorage.setItem('currentUser', JSON.stringify(data));\r\n      }).catch(() => {});\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const { data } = await api.post('/auth/login', { email, password });\r\n      setCurrentUser(data.user);\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n      localStorage.setItem('token', data.token);\r\n      return { success: true, user: data.user };\r\n    } catch (e) {\r\n      const user = users.find(u => u.email === email && u.password === password);\r\n      if (user) {\r\n        setCurrentUser(user);\r\n        localStorage.setItem('currentUser', JSON.stringify(user));\r\n        return { success: true, user };\r\n      }\r\n      return { success: false, error: 'Invalid email or password' };\r\n    }\r\n  };\r\n\r\n  const signup = async (name, email, password) => {\r\n    try {\r\n      const { data } = await api.post('/auth/signup', { name, email, password });\r\n      setCurrentUser(data.user);\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n      localStorage.setItem('token', data.token);\r\n      return { success: true, user: data.user };\r\n    } catch (e) {\r\n      const existingUser = users.find(u => u.email === email);\r\n      if (existingUser) {\r\n        return { success: false, error: 'User already exists' };\r\n      }\r\n      const newUser = {\r\n        id: users.length + 1,\r\n        name,\r\n        email,\r\n        password,\r\n        role: 'user'\r\n      };\r\n      setUsers([...users, newUser]);\r\n      setCurrentUser(newUser);\r\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\r\n      return { success: true, user: newUser };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const fetchAllUsers = async () => {\r\n    try {\r\n      const { data } = await api.get('/users');\r\n      return data;\r\n    } catch (e) {\r\n      return users;\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      const { data } = await api.put('/me', updates);\r\n      setCurrentUser(data.user);\r\n      localStorage.setItem('currentUser', JSON.stringify(data.user));\r\n      localStorage.setItem('token', data.token);\r\n      return { success: true, user: data.user };\r\n    } catch (e) {\r\n      // fallback: update local-only session\r\n      const updated = { ...currentUser, ...updates };\r\n      setCurrentUser(updated);\r\n      localStorage.setItem('currentUser', JSON.stringify(updated));\r\n      return { success: true, user: updated };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    getAllUsers: fetchAllUsers,\r\n    updateProfile,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,GAAG,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAG,CAClB;MACEC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,YAAY;MAClBC,KAAK,EAAE,8BAA8B;MACrCC,QAAQ,EAAE,QAAQ;MAClBC,IAAI,EAAE;IACR,CAAC,EACD;MACEJ,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,kBAAkB;MACzBC,QAAQ,EAAE,aAAa;MACvBC,IAAI,EAAE;IACR,CAAC,CACF;IACDR,QAAQ,CAACG,WAAW,CAAC;IAErB,MAAMM,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,MAAMC,KAAK,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,SAAS,EAAE;MACbX,cAAc,CAACe,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC,CAAC;IACvC;IACA,IAAIG,KAAK,EAAE;MACT;MACA1B,GAAG,CAAC6B,GAAG,CAAC,KAAK,CAAC,CAACC,IAAI,CAAC,CAAC;QAAEC;MAAK,CAAC,KAAK;QAChCnB,cAAc,CAACmB,IAAI,CAAC;QACpBP,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,IAAI,CAAC,CAAC;MAC3D,CAAC,CAAC,CAACG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACpB;IACAlB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,KAAK,GAAG,MAAAA,CAAOf,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAACoC,IAAI,CAAC,aAAa,EAAE;QAAEhB,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnET,cAAc,CAACmB,IAAI,CAACM,IAAI,CAAC;MACzBb,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,IAAI,CAACM,IAAI,CAAC,CAAC;MAC9Db,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,IAAI,CAACL,KAAK,CAAC;MACzC,OAAO;QAAEY,OAAO,EAAE,IAAI;QAAED,IAAI,EAAEN,IAAI,CAACM;MAAK,CAAC;IAC3C,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,MAAMF,IAAI,GAAGxB,KAAK,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrB,KAAK,KAAKA,KAAK,IAAIqB,CAAC,CAACpB,QAAQ,KAAKA,QAAQ,CAAC;MAC1E,IAAIgB,IAAI,EAAE;QACRzB,cAAc,CAACyB,IAAI,CAAC;QACpBb,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACI,IAAI,CAAC,CAAC;QACzD,OAAO;UAAEC,OAAO,EAAE,IAAI;UAAED;QAAK,CAAC;MAChC;MACA,OAAO;QAAEC,OAAO,EAAE,KAAK;QAAEI,KAAK,EAAE;MAA4B,CAAC;IAC/D;EACF,CAAC;EAED,MAAMC,MAAM,GAAG,MAAAA,CAAOxB,IAAI,EAAEC,KAAK,EAAEC,QAAQ,KAAK;IAC9C,IAAI;MACF,MAAM;QAAEU;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAACoC,IAAI,CAAC,cAAc,EAAE;QAAEjB,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC,CAAC;MAC1ET,cAAc,CAACmB,IAAI,CAACM,IAAI,CAAC;MACzBb,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,IAAI,CAACM,IAAI,CAAC,CAAC;MAC9Db,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,IAAI,CAACL,KAAK,CAAC;MACzC,OAAO;QAAEY,OAAO,EAAE,IAAI;QAAED,IAAI,EAAEN,IAAI,CAACM;MAAK,CAAC;IAC3C,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV,MAAMK,YAAY,GAAG/B,KAAK,CAAC2B,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACrB,KAAK,KAAKA,KAAK,CAAC;MACvD,IAAIwB,YAAY,EAAE;QAChB,OAAO;UAAEN,OAAO,EAAE,KAAK;UAAEI,KAAK,EAAE;QAAsB,CAAC;MACzD;MACA,MAAMG,OAAO,GAAG;QACd3B,EAAE,EAAEL,KAAK,CAACiC,MAAM,GAAG,CAAC;QACpB3B,IAAI;QACJC,KAAK;QACLC,QAAQ;QACRC,IAAI,EAAE;MACR,CAAC;MACDR,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEgC,OAAO,CAAC,CAAC;MAC7BjC,cAAc,CAACiC,OAAO,CAAC;MACvBrB,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACY,OAAO,CAAC,CAAC;MAC5D,OAAO;QAAEP,OAAO,EAAE,IAAI;QAAED,IAAI,EAAEQ;MAAQ,CAAC;IACzC;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBnC,cAAc,CAAC,IAAI,CAAC;IACpBY,YAAY,CAACwB,UAAU,CAAC,aAAa,CAAC;IACtCxB,YAAY,CAACwB,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAM;QAAElB;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAAC6B,GAAG,CAAC,QAAQ,CAAC;MACxC,OAAOE,IAAI;IACb,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACV,OAAO1B,KAAK;IACd;EACF,CAAC;EAED,MAAMqC,aAAa,GAAG,MAAOC,OAAO,IAAK;IACvC,IAAI;MACF,MAAM;QAAEpB;MAAK,CAAC,GAAG,MAAM/B,GAAG,CAACoD,GAAG,CAAC,KAAK,EAAED,OAAO,CAAC;MAC9CvC,cAAc,CAACmB,IAAI,CAACM,IAAI,CAAC;MACzBb,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACF,IAAI,CAACM,IAAI,CAAC,CAAC;MAC9Db,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,IAAI,CAACL,KAAK,CAAC;MACzC,OAAO;QAAEY,OAAO,EAAE,IAAI;QAAED,IAAI,EAAEN,IAAI,CAACM;MAAK,CAAC;IAC3C,CAAC,CAAC,OAAOE,CAAC,EAAE;MACV;MACA,MAAMc,OAAO,GAAG;QAAE,GAAG1C,WAAW;QAAE,GAAGwC;MAAQ,CAAC;MAC9CvC,cAAc,CAACyC,OAAO,CAAC;MACvB7B,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACoB,OAAO,CAAC,CAAC;MAC5D,OAAO;QAAEf,OAAO,EAAE,IAAI;QAAED,IAAI,EAAEgB;MAAQ,CAAC;IACzC;EACF,CAAC;EAED,MAAMC,KAAK,GAAG;IACZ3C,WAAW;IACXwB,KAAK;IACLQ,MAAM;IACNI,MAAM;IACNQ,WAAW,EAAEN,aAAa;IAC1BC,aAAa;IACbnC;EACF,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACqD,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA7C,QAAA,EAChCA;EAAQ;IAAAgD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClD,GAAA,CAjIWF,YAAY;AAAAqD,EAAA,GAAZrD,YAAY;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}