{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prane\\\\Desktop\\\\depart\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize with some sample users\n  useEffect(() => {\n    const sampleUsers = [{\n      id: 1,\n      name: 'Admin User',\n      email: 'admin@djstore.com',\n      password: 'admin123',\n      role: 'admin'\n    }, {\n      id: 2,\n      name: 'John Doe',\n      email: 'john@example.com',\n      password: 'password123',\n      role: 'user'\n    }];\n    setUsers(sampleUsers);\n\n    // Check if user is logged in from localStorage\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n  const login = (email, password) => {\n    const user = users.find(u => u.email === email && u.password === password);\n    if (user) {\n      setCurrentUser(user);\n      localStorage.setItem('currentUser', JSON.stringify(user));\n      return {\n        success: true,\n        user\n      };\n    }\n    return {\n      success: false,\n      error: 'Invalid email or password'\n    };\n  };\n  const signup = (name, email, password) => {\n    const existingUser = users.find(u => u.email === email);\n    if (existingUser) {\n      return {\n        success: false,\n        error: 'User already exists'\n      };\n    }\n    const newUser = {\n      id: users.length + 1,\n      name,\n      email,\n      password,\n      role: 'user'\n    };\n    setUsers([...users, newUser]);\n    setCurrentUser(newUser);\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\n    return {\n      success: true,\n      user: newUser\n    };\n  };\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n  const getAllUsers = () => {\n    return users;\n  };\n  const value = {\n    currentUser,\n    login,\n    signup,\n    logout,\n    getAllUsers,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"iTQSDCOdPKz7Cd1LiGHVWwr+VeI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","users","setUsers","loading","setLoading","sampleUsers","id","name","email","password","role","savedUser","localStorage","getItem","JSON","parse","login","user","find","u","setItem","stringify","success","error","signup","existingUser","newUser","length","logout","removeItem","getAllUsers","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prane/Desktop/depart/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Initialize with some sample users\r\n  useEffect(() => {\r\n    const sampleUsers = [\r\n      {\r\n        id: 1,\r\n        name: 'Admin User',\r\n        email: 'admin@djstore.com',\r\n        password: 'admin123',\r\n        role: 'admin'\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        password: 'password123',\r\n        role: 'user'\r\n      }\r\n    ];\r\n    setUsers(sampleUsers);\r\n    \r\n    // Check if user is logged in from localStorage\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    if (savedUser) {\r\n      setCurrentUser(JSON.parse(savedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (email, password) => {\r\n    const user = users.find(u => u.email === email && u.password === password);\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      localStorage.setItem('currentUser', JSON.stringify(user));\r\n      return { success: true, user };\r\n    }\r\n    return { success: false, error: 'Invalid email or password' };\r\n  };\r\n\r\n  const signup = (name, email, password) => {\r\n    const existingUser = users.find(u => u.email === email);\r\n    if (existingUser) {\r\n      return { success: false, error: 'User already exists' };\r\n    }\r\n\r\n    const newUser = {\r\n      id: users.length + 1,\r\n      name,\r\n      email,\r\n      password,\r\n      role: 'user'\r\n    };\r\n\r\n    setUsers([...users, newUser]);\r\n    setCurrentUser(newUser);\r\n    localStorage.setItem('currentUser', JSON.stringify(newUser));\r\n    return { success: true, user: newUser };\r\n  };\r\n\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  const getAllUsers = () => {\r\n    return users;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n    getAllUsers,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}